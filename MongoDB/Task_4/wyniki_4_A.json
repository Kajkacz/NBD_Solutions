MongoDB shell version v4.4.4
connecting to: mongodb://127.0.0.1:27017/nbd?compressors=disabled&gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("4ba825f8-c57f-4a39-9ac1-0ad75dfcb3f3") }
MongoDB server version: 4.4.4
{
	"_batch" : [
		{
			"_id" : "Laos",
			"min_bmi" : 20.414405907869934,
			"avg_bmi" : 24.706560500173143,
			"max_bmi" : 28.470547935007055
		},
		{
			"_id" : "Trinidad and Tobago",
			"min_bmi" : 22.714055076873127,
			"avg_bmi" : 27.598645704582985,
			"max_bmi" : 31.519844903401175
		},
		{
			"_id" : "Uzbekistan",
			"min_bmi" : 19.782197771015646,
			"avg_bmi" : 25.895086720586505,
			"max_bmi" : 32.30460851219658
		},
		{
			"_id" : "Turkmenistan",
			"min_bmi" : 21.536036875349122,
			"avg_bmi" : 26.074693406233422,
			"max_bmi" : 30.263793694794966
		},
		{
			"_id" : "Brazil",
			"min_bmi" : 17.455901881799914,
			"avg_bmi" : 25.618104713178706,
			"max_bmi" : 40.629137270681994
		},
		{
			"_id" : "Tajikistan",
			"min_bmi" : 19.990278828313507,
			"avg_bmi" : 24.961843320223544,
			"max_bmi" : 31.132650605821127
		},
		{
			"_id" : "Israel",
			"min_bmi" : 21.291597916349954,
			"avg_bmi" : 25.451689665589672,
			"max_bmi" : 30.14483568029636
		},
		{
			"_id" : "Mongolia",
			"min_bmi" : 19.12334810050309,
			"avg_bmi" : 24.02853800304413,
			"max_bmi" : 31.476002629848782
		},
		{
			"_id" : "French Guiana",
			"min_bmi" : 22.27180050183758,
			"avg_bmi" : 25.59150976361709,
			"max_bmi" : 28.911219025396605
		},
		{
			"_id" : "Bangladesh",
			"min_bmi" : 19.809821191475773,
			"avg_bmi" : 26.693456288940414,
			"max_bmi" : 34.06297114172177
		},
		{
			"_id" : "France",
			"min_bmi" : 17.6805182946428,
			"avg_bmi" : 25.217881017385817,
			"max_bmi" : 40.687098141766576
		},
		{
			"_id" : "Iran",
			"min_bmi" : 18.237996217377763,
			"avg_bmi" : 25.852744467464767,
			"max_bmi" : 37.98020856315509
		},
		{
			"_id" : "Sweden",
			"min_bmi" : 18.10118686020887,
			"avg_bmi" : 25.759264412505875,
			"max_bmi" : 40.0885905616931
		},
		{
			"_id" : "Portugal",
			"min_bmi" : 17.25327791895594,
			"avg_bmi" : 25.473614044537957,
			"max_bmi" : 39.66789019620169
		},
		{
			"_id" : "Fiji",
			"min_bmi" : 21.202149695398855,
			"avg_bmi" : 21.202149695398855,
			"max_bmi" : 21.202149695398855
		},
		{
			"_id" : "Benin",
			"min_bmi" : 21.326707132619116,
			"avg_bmi" : 25.77836456996179,
			"max_bmi" : 30.296481888973997
		},
		{
			"_id" : "Bhutan",
			"min_bmi" : 19.41885638320743,
			"avg_bmi" : 24.056604894582005,
			"max_bmi" : 31.35770002294631
		},
		{
			"_id" : "Guam",
			"min_bmi" : 20.67309032186491,
			"avg_bmi" : 22.450193658121716,
			"max_bmi" : 24.012673635721274
		},
		{
			"_id" : "Hungary",
			"min_bmi" : 22.357117184320284,
			"avg_bmi" : 26.31407363405381,
			"max_bmi" : 32.69237888437416
		},
		{
			"_id" : "East Timor",
			"min_bmi" : 21.525145394421962,
			"avg_bmi" : 25.827978752662307,
			"max_bmi" : 32.7295665335962
		},
		{
			"_id" : "Guyana",
			"min_bmi" : 24.09688921189088,
			"avg_bmi" : 26.155629974879574,
			"max_bmi" : 28.214370737868265
		},
		{
			"_id" : "Ivory Coast",
			"min_bmi" : 20.49720267946944,
			"avg_bmi" : 26.73916221830437,
			"max_bmi" : 35.26565858224913
		},
		{
			"_id" : "Mozambique",
			"min_bmi" : 22.800359685650264,
			"avg_bmi" : 25.56294360884168,
			"max_bmi" : 29.447895353946237
		},
		{
			"_id" : "Germany",
			"min_bmi" : 19.81281881812401,
			"avg_bmi" : 24.621106995155948,
			"max_bmi" : 32.56393192452176
		},
		{
			"_id" : "Lithuania",
			"min_bmi" : 19.68833974966633,
			"avg_bmi" : 24.414208345235185,
			"max_bmi" : 30.887830005968034
		},
		{
			"_id" : "Iceland",
			"min_bmi" : 22.674667319714626,
			"avg_bmi" : 25.59095093253575,
			"max_bmi" : 30.147382261951023
		},
		{
			"_id" : "Comoros",
			"min_bmi" : 19.73678859401531,
			"avg_bmi" : 25.43904303433795,
			"max_bmi" : 33.86465840113391
		},
		{
			"_id" : "Eritrea",
			"min_bmi" : 24.502688749443237,
			"avg_bmi" : 26.18666676758779,
			"max_bmi" : 28.706187680256324
		},
		{
			"_id" : "Vietnam",
			"min_bmi" : 16.58807462378891,
			"avg_bmi" : 25.04102236093672,
			"max_bmi" : 32.97072894443237
		},
		{
			"_id" : "Russia",
			"min_bmi" : 17.631221751685487,
			"avg_bmi" : 25.39912530693073,
			"max_bmi" : 39.88445766499928
		},
		{
			"_id" : "Republic of the Congo",
			"min_bmi" : 17.661407823502014,
			"avg_bmi" : 25.559867696319756,
			"max_bmi" : 30.403210099424623
		},
		{
			"_id" : "Nigeria",
			"min_bmi" : 16.860335772659223,
			"avg_bmi" : 24.802388203011215,
			"max_bmi" : 36.16277887197436
		},
		{
			"_id" : "Algeria",
			"min_bmi" : 28.59446385380274,
			"avg_bmi" : 28.59446385380274,
			"max_bmi" : 28.59446385380274
		},
		{
			"_id" : "Greece",
			"min_bmi" : 19.126762812266065,
			"avg_bmi" : 25.757728284442734,
			"max_bmi" : 41.52589808442401
		},
		{
			"_id" : "Belarus",
			"min_bmi" : 17.862911074560454,
			"avg_bmi" : 25.469679075687,
			"max_bmi" : 33.938647320174816
		},
		{
			"_id" : "Sint Maarten",
			"min_bmi" : 22.218504166585912,
			"avg_bmi" : 23.160784820344965,
			"max_bmi" : 24.10306547410402
		},
		{
			"_id" : "Belgium",
			"min_bmi" : 20.047926099827215,
			"avg_bmi" : 26.140778626016406,
			"max_bmi" : 28.997682388567075
		},
		{
			"_id" : "Uganda",
			"min_bmi" : 20.585897193172045,
			"avg_bmi" : 25.799926326819378,
			"max_bmi" : 33.24570873490975
		},
		{
			"_id" : "Namibia",
			"min_bmi" : 22.333321771690475,
			"avg_bmi" : 26.736439032858964,
			"max_bmi" : 32.280397498780374
		},
		{
			"_id" : "Ireland",
			"min_bmi" : 17.753180049744593,
			"avg_bmi" : 25.94602693286139,
			"max_bmi" : 33.51950090390848
		},
		{
			"_id" : "Argentina",
			"min_bmi" : 17.58733455568425,
			"avg_bmi" : 25.676814042428507,
			"max_bmi" : 34.13224063185604
		},
		{
			"_id" : "Azerbaijan",
			"min_bmi" : 18.770569815679924,
			"avg_bmi" : 25.953521178074688,
			"max_bmi" : 36.93348217200575
		},
		{
			"_id" : "Thailand",
			"min_bmi" : 18.1817173424744,
			"avg_bmi" : 25.689714200817665,
			"max_bmi" : 35.590560182726435
		},
		{
			"_id" : "Cambodia",
			"min_bmi" : 21.873859826171213,
			"avg_bmi" : 27.383971278390955,
			"max_bmi" : 33.328500351027124
		},
		{
			"_id" : "Cuba",
			"min_bmi" : 18.489462979361964,
			"avg_bmi" : 26.37919135685751,
			"max_bmi" : 35.424098295679755
		},
		{
			"_id" : "Mauritania",
			"min_bmi" : 20.427479249813242,
			"avg_bmi" : 21.56355023247727,
			"max_bmi" : 22.6996212151413
		},
		{
			"_id" : "Macao",
			"min_bmi" : 23.988477689826944,
			"avg_bmi" : 23.988477689826944,
			"max_bmi" : 23.988477689826944
		},
		{
			"_id" : "Papua New Guinea",
			"min_bmi" : 19.859417039821558,
			"avg_bmi" : 24.213264087002074,
			"max_bmi" : 26.90358965091355
		},
		{
			"_id" : "Turkey",
			"min_bmi" : 22.712340024306467,
			"avg_bmi" : 22.99159106196313,
			"max_bmi" : 23.218818230827427
		},
		{
			"_id" : "Tunisia",
			"min_bmi" : 18.60519012755488,
			"avg_bmi" : 24.190100193856328,
			"max_bmi" : 30.378661433346
		},
		{
			"_id" : "Saint Kitts and Nevis",
			"min_bmi" : 25.18137321901941,
			"avg_bmi" : 27.80112893513996,
			"max_bmi" : 30.062612063272155
		},
		{
			"_id" : "Hong Kong",
			"min_bmi" : 27.28283221221082,
			"avg_bmi" : 27.28283221221082,
			"max_bmi" : 27.28283221221082
		},
		{
			"_id" : "Swaziland",
			"min_bmi" : 20.902625563889618,
			"avg_bmi" : 20.902625563889618,
			"max_bmi" : 20.902625563889618
		},
		{
			"_id" : "Gambia",
			"min_bmi" : 17.84046677774891,
			"avg_bmi" : 23.773405222453228,
			"max_bmi" : 29.041518380755523
		},
		{
			"_id" : "Qatar",
			"min_bmi" : 21.901674383997086,
			"avg_bmi" : 25.750482706734886,
			"max_bmi" : 29.599291029472685
		},
		{
			"_id" : "Mexico",
			"min_bmi" : 18.917857995347575,
			"avg_bmi" : 25.474290019600346,
			"max_bmi" : 36.270875149671795
		},
		{
			"_id" : "Peru",
			"min_bmi" : 17.80600236198692,
			"avg_bmi" : 25.27264557662211,
			"max_bmi" : 36.36334544992971
		},
		{
			"_id" : "Samoa",
			"min_bmi" : 20.54488200453268,
			"avg_bmi" : 20.54488200453268,
			"max_bmi" : 20.54488200453268
		},
		{
			"_id" : "Venezuela",
			"min_bmi" : 19.136466798568403,
			"avg_bmi" : 24.913624546028572,
			"max_bmi" : 31.135855490289448
		},
		{
			"_id" : "Estonia",
			"min_bmi" : 18.560878620789445,
			"avg_bmi" : 25.542136169318567,
			"max_bmi" : 28.68360155605993
		},
		{
			"_id" : "Botswana",
			"min_bmi" : 21.66103584914847,
			"avg_bmi" : 24.65301745653144,
			"max_bmi" : 27.181787438387662
		},
		{
			"_id" : "Macedonia",
			"min_bmi" : 20.4950521872469,
			"avg_bmi" : 25.169543167338254,
			"max_bmi" : 32.52569417786054
		},
		{
			"_id" : "China",
			"min_bmi" : 15.45756779740527,
			"avg_bmi" : 25.581559894071532,
			"max_bmi" : 42.36228470295767
		},
		{
			"_id" : "Indonesia",
			"min_bmi" : 14.752916025545577,
			"avg_bmi" : 25.496762666989078,
			"max_bmi" : 45.225488811433195
		},
		{
			"_id" : "Yemen",
			"min_bmi" : 20.910656892847584,
			"avg_bmi" : 25.520741902141808,
			"max_bmi" : 34.85489627858924
		},
		{
			"_id" : "Tanzania",
			"min_bmi" : 20.050294593784717,
			"avg_bmi" : 26.252300148888178,
			"max_bmi" : 34.999295729756405
		},
		{
			"_id" : "Brunei",
			"min_bmi" : 25.02697259105827,
			"avg_bmi" : 25.02697259105827,
			"max_bmi" : 25.02697259105827
		},
		{
			"_id" : "Tonga",
			"min_bmi" : 23.8293086776095,
			"avg_bmi" : 23.8293086776095,
			"max_bmi" : 23.8293086776095
		},
		{
			"_id" : "Honduras",
			"min_bmi" : 18.483295476526518,
			"avg_bmi" : 25.48034274333803,
			"max_bmi" : 35.22066445474855
		},
		{
			"_id" : "Andorra",
			"min_bmi" : 25.692486527991626,
			"avg_bmi" : 28.172283654749506,
			"max_bmi" : 30.652080781507387
		},
		{
			"_id" : "Somalia",
			"min_bmi" : 29.953705951906365,
			"avg_bmi" : 29.953705951906365,
			"max_bmi" : 29.953705951906365
		},
		{
			"_id" : "New Caledonia",
			"min_bmi" : 24.07180767559938,
			"avg_bmi" : 25.50588178834554,
			"max_bmi" : 26.939955901091704
		},
		{
			"_id" : "Guinea-Bissau",
			"min_bmi" : 23.285128184292063,
			"avg_bmi" : 24.427204123390514,
			"max_bmi" : 26.54403588086242
		},
		{
			"_id" : "Kuwait",
			"min_bmi" : 22.439797476713352,
			"avg_bmi" : 25.231665011916373,
			"max_bmi" : 27.18431873880667
		},
		{
			"_id" : "El Salvador",
			"min_bmi" : 21.925828160659016,
			"avg_bmi" : 25.348361001442797,
			"max_bmi" : 33.56299576484532
		},
		{
			"_id" : "Maldives",
			"min_bmi" : 23.654619429922963,
			"avg_bmi" : 25.389870790829352,
			"max_bmi" : 28.258302397598005
		},
		{
			"_id" : "Mauritius",
			"min_bmi" : 19.225308641975307,
			"avg_bmi" : 25.49360782117101,
			"max_bmi" : 38.863421084463056
		},
		{
			"_id" : "Libya",
			"min_bmi" : 21.427423728295793,
			"avg_bmi" : 27.274094200472675,
			"max_bmi" : 35.149594988585044
		},
		{
			"_id" : "United States",
			"min_bmi" : 18.80366267168511,
			"avg_bmi" : 25.74653431942232,
			"max_bmi" : 36.69514941999169
		},
		{
			"_id" : "Afghanistan",
			"min_bmi" : 18.430299348576302,
			"avg_bmi" : 25.04840088025495,
			"max_bmi" : 31.68072427781462
		},
		{
			"_id" : "North Korea",
			"min_bmi" : 20.924212172010193,
			"avg_bmi" : 26.205146023322587,
			"max_bmi" : 30.61429036407098
		},
		{
			"_id" : "Kenya",
			"min_bmi" : 21.963094173998595,
			"avg_bmi" : 25.84497767923738,
			"max_bmi" : 32.415973001368904
		},
		{
			"_id" : "Finland",
			"min_bmi" : 18.313044445355136,
			"avg_bmi" : 25.62844713976524,
			"max_bmi" : 36.88879211052598
		},
		{
			"_id" : "Puerto Rico",
			"min_bmi" : 22.62480717834322,
			"avg_bmi" : 25.26234968805242,
			"max_bmi" : 27.283415282531926
		},
		{
			"_id" : "Uruguay",
			"min_bmi" : 20.368800960879323,
			"avg_bmi" : 25.32476196226835,
			"max_bmi" : 34.361426322308105
		},
		{
			"_id" : "Egypt",
			"min_bmi" : 17.650429873238075,
			"avg_bmi" : 24.279172249085583,
			"max_bmi" : 32.03372250044894
		},
		{
			"_id" : "Poland",
			"min_bmi" : 18.006317259010835,
			"avg_bmi" : 25.2874317493796,
			"max_bmi" : 36.719542808310635
		},
		{
			"_id" : "Czech Republic",
			"min_bmi" : 18.56386639676774,
			"avg_bmi" : 25.234554286525263,
			"max_bmi" : 33.1519013359832
		},
		{
			"_id" : "Sudan",
			"min_bmi" : 22.771848958184258,
			"avg_bmi" : 24.951753358198896,
			"max_bmi" : 26.388338263210724
		},
		{
			"_id" : "Micronesia",
			"min_bmi" : 20.48358314807701,
			"avg_bmi" : 23.307344877130706,
			"max_bmi" : 25.248866566177664
		},
		{
			"_id" : "Nicaragua",
			"min_bmi" : 19.775488264201304,
			"avg_bmi" : 24.17094824384103,
			"max_bmi" : 30.037211079338597
		},
		{
			"_id" : "Philippines",
			"min_bmi" : 17.747775714237722,
			"avg_bmi" : 25.206407548302973,
			"max_bmi" : 40.14921877820496
		},
		{
			"_id" : "Martinique",
			"min_bmi" : 24.025383631333916,
			"avg_bmi" : 24.025383631333916,
			"max_bmi" : 24.025383631333916
		},
		{
			"_id" : "Greenland",
			"min_bmi" : 25.872317262244348,
			"avg_bmi" : 25.872317262244348,
			"max_bmi" : 25.872317262244348
		},
		{
			"_id" : "Moldova",
			"min_bmi" : 19.688381123290277,
			"avg_bmi" : 25.57295819429361,
			"max_bmi" : 32.56715420989366
		},
		{
			"_id" : "South Africa",
			"min_bmi" : 17.335043301262825,
			"avg_bmi" : 25.864994700042747,
			"max_bmi" : 40.541505141933634
		},
		{
			"_id" : "Haiti",
			"min_bmi" : 21.95395109695805,
			"avg_bmi" : 26.053500838405977,
			"max_bmi" : 34.706505929936306
		},
		{
			"_id" : "Jamaica",
			"min_bmi" : 22.275369146558596,
			"avg_bmi" : 24.93149892025034,
			"max_bmi" : 28.975717835121536
		},
		{
			"_id" : "South Sudan",
			"min_bmi" : 25.958795187276635,
			"avg_bmi" : 25.958795187276635,
			"max_bmi" : 25.958795187276635
		},
		{
			"_id" : "Croatia",
			"min_bmi" : 18.79145933816665,
			"avg_bmi" : 24.859825049169952,
			"max_bmi" : 38.544548504343034
		},
		{
			"_id" : "Burundi",
			"min_bmi" : 23.41760581267604,
			"avg_bmi" : 25.64831294896216,
			"max_bmi" : 28.502450131594543
		}
	],
	"_useReadCommands" : true,
	"_cursorid" : NumberLong("8734425962128342464"),
	"_batchSize" : undefined,
	"_maxAwaitTimeMS" : undefined,
	"_txnNumber" : undefined,
	"_ns" : "nbd.people",
	"_db" : nbd,
	"_collName" : "people",
	"_cursorHandle" : {
		
	},
	"isClosed" : function() {
    if (this._useReadCommands) {
        return bsonWoCompare({_: this._cursorid}, {_: NumberLong(0)}) === 0;
    }
    return this._cursor.isClosed();
},
	"isExhausted" : function() {
    return this.isClosed() && this.objsLeftInBatch() === 0;
},
	"close" : function() {
    if (!this._useReadCommands) {
        this._cursor.close();
    } else if (bsonWoCompare({_: this._cursorid}, {_: NumberLong(0)}) !== 0) {
        var killCursorCmd = {
            killCursors: this._collName,
            cursors: [this._cursorid],
        };
        var cmdRes = this._db.runCommand(killCursorCmd);
        if (cmdRes.ok != 1) {
            throw _getErrorWithCode(cmdRes, "killCursors command failed: " + tojson(cmdRes));
        }

        this._cursorHandle.zeroCursorId();
        this._cursorid = NumberLong(0);
    }
},
	"_updatePostBatchResumeToken" : function(cursorObj) {
    if (cursorObj.postBatchResumeToken) {
        this._postBatchResumeToken = cursorObj.postBatchResumeToken;
        if ((cursorObj.firstBatch || cursorObj.nextBatch).length === 0) {
            this._resumeToken = this._postBatchResumeToken;
        }
        this._isChangeStream = true;
    }
},
	"_runGetMoreCommand" : function() {
    // Construct the getMore command.
    var getMoreCmd = {getMore: this._cursorid, collection: this._collName};

    if (this._batchSize) {
        getMoreCmd["batchSize"] = this._batchSize;
    }

    // maxAwaitTimeMS is only supported when using read commands.
    if (this._maxAwaitTimeMS) {
        getMoreCmd.maxTimeMS = this._maxAwaitTimeMS;
    }

    if (this._txnNumber) {
        getMoreCmd.txnNumber = NumberLong(this._txnNumber);
        getMoreCmd.autocommit = false;
    }

    // Deliver the getMore command, and check for errors in the response.
    var cmdRes = this._db.runCommand(getMoreCmd);
    assert.commandWorked(cmdRes, () => "getMore command failed: " + tojson(cmdRes));

    if (this._ns !== cmdRes.cursor.ns) {
        throw Error("unexpected collection in getMore response: " + this._ns +
                    " != " + cmdRes.cursor.ns);
    }

    if (!cmdRes.cursor.id.compare(NumberLong("0"))) {
        this._cursorHandle.zeroCursorId();
        this._cursorid = NumberLong("0");
    } else if (this._cursorid.compare(cmdRes.cursor.id)) {
        throw Error("unexpected cursor id: " + this._cursorid.toString() +
                    " != " + cmdRes.cursor.id.toString());
    }

    // If the command result represents a change stream cursor, update our postBatchResumeToken.
    this._updatePostBatchResumeToken(cmdRes.cursor);

    // Successfully retrieved the next batch.
    this._batch = cmdRes.cursor.nextBatch.reverse();
},
	"_hasNextUsingCommands" : function() {
    assert(this._useReadCommands);

    if (!this._batch.length) {
        if (!this._cursorid.compare(NumberLong("0"))) {
            return false;
        }

        this._runGetMoreCommand();
    }

    return this._batch.length > 0;
},
	"hasNext" : function() {
    if (this._useReadCommands) {
        return this._hasNextUsingCommands();
    }

    return this._batch.length || this._cursor.hasNext();
},
	"next" : function() {
    if (this._batch.length) {
        // Pop the next result off the batch.
        const nextDoc = this._batch.pop();
        if (this._isChangeStream) {
            // If this is the last result in the batch, the postBatchResumeToken becomes the current
            // resume token for the cursor. Otherwise, the resume token is the _id of 'nextDoc'.
            this._resumeToken = (this._batch.length ? nextDoc._id : this._postBatchResumeToken);
        }
        return nextDoc;
    } else if (this._useReadCommands) {
        // Have to call hasNext() here, as this is where we may issue a getMore in order to retrieve
        // the next batch of results.
        if (!this.hasNext())
            throw Error("error hasNext: false");
        return this._batch.pop();
    } else {
        if (!this._cursor.hasNext())
            throw Error("error hasNext: false");

        var ret = this._cursor.next();
        if (ret.$err)
            throw _getErrorWithCode(ret, "error: " + tojson(ret));
        return ret;
    }
},
	"objsLeftInBatch" : function() {
    if (this._useReadCommands) {
        return this._batch.length;
    } else if (this._batch.length) {
        return this._batch.length;
    } else {
        return this._cursor.objsLeftInBatch();
    }
},
	"getId" : function() {
    return this._cursorid;
},
	"getResumeToken" : function() {
    // Return the most recent recorded resume token, if such a token exists.
    return this._resumeToken;
},
	"help" : function() {
    // This is the same as the "Cursor Methods" section of DBQuery.help().
    print("\nCursor methods");
    print("\t.toArray() - iterates through docs and returns an array of the results");
    print("\t.forEach( func )");
    print("\t.map( func )");
    print("\t.hasNext()");
    print("\t.next()");
    print(
        "\t.objsLeftInBatch() - returns count of docs left in current batch (when exhausted, a new getMore will be issued)");
    print("\t.itcount() - iterates through documents and counts them");
    print(
        "\t.getResumeToken() - for a change stream cursor, obtains the most recent valid resume token, if it exists.");
    print("\t.pretty() - pretty print each document, possibly over multiple lines");
    print("\t.close()");
},
	"toArray" : function() {
    if (this._arr)
        return this._arr;

    var a = [];
    while (this.hasNext())
        a.push(this.next());
    this._arr = a;
    return a;
},
	"forEach" : function(func) {
    while (this.hasNext())
        func(this.next());
},
	"map" : function(func) {
    var a = [];
    while (this.hasNext())
        a.push(func(this.next()));
    return a;
},
	"itcount" : function() {
    var num = 0;

    // Track how many bytes we've used this cursor to iterate iterated.  This function can be called
    // with some very large cursors.  SpiderMonkey appears happy to allow these objects to
    // accumulate, so regular gc() avoids an overly large memory footprint.
    //
    // TODO: migrate this function into c++
    var bytesSinceGC = 0;

    while (this.hasNext()) {
        num++;
        var nextDoc = this.next();
        bytesSinceGC += Object.bsonsize(nextDoc);

        // Garbage collect every 10 MB.
        if (bytesSinceGC > (10 * 1024 * 1024)) {
            bytesSinceGC = 0;
            gc();
        }
    }
    return num;
},
	"shellPrint" : function() {
    try {
        var start = new Date().getTime();
        var n = 0;
        while (this.hasNext() && n < DBQuery.shellBatchSize) {
            var s = this._prettyShell ? tojson(this.next()) : tojson(this.next(), "", true);
            print(s);
            n++;
        }
        if (typeof _verboseShell !== 'undefined' && _verboseShell) {
            var time = new Date().getTime() - start;
            print("Fetched " + n + " record(s) in " + time + "ms");
        }
        if (this.hasNext()) {
            print("Type \"it\" for more");
            ___it___ = this;
        } else {
            ___it___ = null;
        }
    } catch (e) {
        print(e);
    }
},
	"pretty" : function() {
    this._prettyShell = true;
    return this;
}
}
